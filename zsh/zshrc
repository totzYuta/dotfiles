#
# ███████╗███████╗██╗  ██╗██████╗  ██████╗
# ╚══███╔╝██╔════╝██║  ██║██╔══██╗██╔════╝
#   ███╔╝ ███████╗███████║██████╔╝██║
#  ███╔╝  ╚════██║██╔══██║██╔══██╗██║
# ███████╗███████║██║  ██║██║  ██║╚██████╗
# ╚══════╝╚══════╝╚═╝  ╚═╝╚═╝  ╚═╝ ╚═════╝
#



# Declaratoin
# ===========


# oh-my-zsh
# ---------

autoload -Uz add-zsh-hook

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# zsh theme
# List: ~/.oh-my-zsh/themes/
ZSH_THEME="avit"

# display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="mm/dd/yyyy"

# plugins (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh


# my configuration
# ----------------

# Base Directory Specification
export CONFIG_HOME="$HOME"
export ZSH_CONFIG="$CONFIG_HOME/.zsh"

# Import zsh config files
source "$ZSH_CONFIG/aliases.zsh"
source "$ZSH_CONFIG/exports.zsh"

# suggest options like `ls -` and TAB
autoload -U compinit
compinit

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# source zsh-syntax-highlighting
if [ -f ~/dotfiles/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh ]; then
  source ~/dotfiles/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
fi

# back transition to directory
. $HOME/.zsh/plugins/bd/bd.zsh

# autojump prefix
if [ -f /usr/local/Cellar/autojump/22.3.0/share/autojump/autojump.zsh ]; then
  source /usr/local/Cellar/autojump/22.3.0/share/autojump/autojump.zsh
fi

# Set current directory name to tmux tab
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git svn
zstyle ':vcs_info:*' formats '%r'
precmd () {
  LANG=en_US.UTF-8 vcs_info
  [[ -n ${vcs_info_msg_0_} ]] && tmux rename-window $vcs_info_msg_0_
}

# Functions
# ---------

fpath=($ZSH_CONFIG/functions(N-/) $fpath)
for i in $(ls $ZSH_CONFIG/functions) ; do autoload -U $i ; done

# `^r`: peco-select-history
zle -N peco-select-history
bindkey '^r' peco-select-history

# Show in status bar
add-zsh-hook precmd rbenv_version


# All Done!
# =========

echo "        ..            "
echo "      ..  ..          "
echo "            ..        "
echo "             ..       "
echo "            ..        "
echo "           ..         "
echo "         ..           "
echo "##       ..    ####   "
echo "##.............##  ## "
echo "##.............##   ##"
echo "##.............## ##                                                    __   "
echo "##.............###     _____       _            _____       _ _        |  |  "
echo " ##...........##      |   __|___  |_|___ _ _   |     |___ _| |_|___ ___|  |  "
echo "  #############       |   __|   | | | . | | |  |   --| . | . | |   | . |__|  "
echo "  #############       |_____|_|_|_| |___|_  |  |_____|___|___|_|_|_|_  |__|  "
echo "#################               |___|   |___|                      |___|     "
